axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(breaks = seq(0, 1, by = 0.25),    # 自定义纵轴刻度
limits = c(0, 1))
p1
ggsave("k1.pdf", p1, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p2 = ggplot(data1, aes(x = numm, y = e1, color = Species, size = Species)) +
geom_point(alpha = 0.4)+
scale_color_manual(
values = c( "L" = "#826AA2CC", "H" = "#589A92CC", "Y" = "#0000FF", "F" = "#FF0000"),
name = "Species",
labels = c("UpC", "IsC", "AsC", "AfC"))+
scale_size_manual(
values = c("L" = 3.5, "H" = 3.5, "Y" = 3.5, "F" = 5.5),
guide = "none")+
theme_bw() +
labs(x = "Varieties", y = "e1", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(breaks = seq(0, 1, by = 0.25),    # 自定义纵轴刻度
limits = c(0, 1))
p2
ggsave("e1.pdf", p2, width = 6.5, height = 5.5, unit = "in", dpi = 300)
rm(list = ls())
library(ggplot2)
library(ggsci)
library(RColorBrewer)
# data2 = read.table("clipboard",header = TRUE)           # data1为属性2:俯视图数据
# data2$numm = 1:nrow(data2)
# data1$Species <- factor(data1$Species, levels = c("L", "H", "Y", "F"))
# save(data2, file = "D:/Rproject/distribution/data2.RData")
load("data2.RData")
#----1----
p = ggplot(data2, aes(x = numm, y = sf2, colour = Species, size = Species)) +
geom_point(alpha = 0.4)+
scale_color_manual(
values = c( "L" = "#826AA2CC", "H" = "#589A92CC", "Y" = "#0000FF", "F" = "#FF0000"),
name = "Species",
labels = c("UpC", "IsC", "AsC", "AfC"))+
scale_size_manual(
values = c("L" = 3.5, "H" = 3.5, "Y" = 3.5, "F" = 5.5),
guide = "none")+
theme_bw() +
labs(x = "Varieties", y = "sf2", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(breaks = seq(0, 1, by = 0.25),    # 自定义纵轴刻度
limits = c(0, 1))
p
ggsave("sf2.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
#----2----
p1 = ggplot(data2, aes(x = numm, y = k2, colour = Species, size = Species))+
geom_point(alpha = 0.4)+
scale_color_manual(
values = c( "L" = "#826AA2CC", "H" = "#589A92CC", "Y" = "#0000FF", "F" = "#FF0000"),
name = "Species",
labels = c("UpC", "IsC", "AsC", "AfC"))+
scale_size_manual(
values = c("L" = 3.5, "H" = 3.5, "Y" = 3.5, "F" = 5.5),
guide = "none")+
theme_bw() +
labs(x = "Varieties", y = "k2", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(breaks = seq(0, 1, by = 0.25),    # 自定义纵轴刻度
limits = c(0, 1))
p1
ggsave("k2.pdf", p1, width = 6.5, height = 5.5, unit = "in", dpi = 300)
#----3----
p2 = ggplot(data2, aes(x = numm, y = e2, colour = Species, size = Species)) +
geom_point(alpha = 0.4)+
scale_color_manual(
values = c( "L" = "#826AA2CC", "H" = "#589A92CC", "Y" = "#0000FF", "F" = "#FF0000"),
name = "Species",
labels = c("UpC", "IsC", "AsC", "AfC"))+
scale_size_manual(
values = c("L" = 3.5, "H" = 3.5, "Y" = 3.5, "F" = 5.5),
guide = "none")+
theme_bw()+
labs(x = "Varieties", y = "e2", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(breaks = seq(0, 1, by = 0.25),    # 自定义纵轴刻度
limits = c(0, 1))
p2
ggsave("e2.pdf", p2, width = 6.5, height = 5.5, unit = "in", dpi = 300)
rm(list = ls())
library(ggplot2)
library(ggsci)
library(RColorBrewer)
library(scales)
# data1 = read.table("clipboard",header = TRUE)           # data1为fixed image实验结果，叠加了实测数据
# data1$numm = 1:nrow(data1)
# save(data1, file = "D:/Rproject/distribution/data11.RData")
load("data11.RData")
model = lm(length ~ Height, data = data1)
summary_model = summary(model)
# 截距与斜率
intercept = round(summary_model$coefficients[1,1], digits = 3)
slope = round(summary_model$coefficients[2,1], digits = 3)
# 构建公式字符串
equation = paste("y = ", slope, "x - ", abs(intercept))
r_squared = round(summary_model$r.squared, digits = 2)  # R方
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 4)
p
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 3)),
hjust = 0, vjust = 1, size = 4)
p
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 4)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 14)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8, alpha = 0.8, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 3.8,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 5,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 6,aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p = ggplot(data1, aes(x = Height, y = length)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel length", y = "Actual length", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Height), y = max(data1$length),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p
ggsave("长度.pdf", p, width = 6.5, height = 5.5, unit = "in", dpi = 300)
rm(list = ls())
library(ggplot2)
library(ggsci)
library(RColorBrewer)
load("data11.RData")
model = lm(width ~ Width, data = data1)
summary_model = summary(model)
# 截距与斜率
intercept = round(summary_model$coefficients[1,1], digits = 3)
slope = round(summary_model$coefficients[2,1], digits = 3)
# 构建公式字符串
equation = paste("y = ", slope, "x + ", intercept)
r_squared = round(summary_model$r.squared, digits = 2)  # R方
p1 = ggplot(data1, aes(x = Width, y = width)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel width", y = "Actual width", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+             # 添加公式和R方
annotate("text", x = min(data1$Width), y = 4.5,
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p1
ggsave("宽度.pdf", p1, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p1 = ggplot(data1, aes(x = Width, y = width)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel width", y = "Actual width", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+             # 添加公式和R方
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Width), y = 4.5,
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p1
p1 = ggplot(data1, aes(x = Width, y = width)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel width", y = "Actual width", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+             # 添加公式和R方
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Width), y = max(data1$Width),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p1
rm(list = ls())
library(ggplot2)
library(ggsci)
library(RColorBrewer)
load("data11.RData")
model = lm(width ~ Width, data = data1)
summary_model = summary(model)
# 截距与斜率
intercept = round(summary_model$coefficients[1,1], digits = 3)
slope = round(summary_model$coefficients[2,1], digits = 3)
# 构建公式字符串
equation = paste("y = ", slope, "x + ", intercept)
r_squared = round(summary_model$r.squared, digits = 2)  # R方
p1 = ggplot(data1, aes(x = Width, y = width)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel width", y = "Actual width", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+             # 添加公式和R方
scale_y_continuous(labels = label_number(scale = 1, suffix = "", accuracy = 0.1))+
annotate("text", x = min(data1$Width), y = max(data1$width),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p1
ggsave("宽度.pdf", p1, width = 6.5, height = 5.5, unit = "in", dpi = 300)
p1 = ggplot(data1, aes(x = Width, y = width)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel width", y = "Actual width", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+             # 添加公式和R方
annotate("text", x = min(data1$Width), y = max(data1$width),
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p1
p1 = ggplot(data1, aes(x = Width, y = width)) +
geom_point(shape = 21, size = 6, aes(fill= classify)) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "Pixel width", y = "Actual width", title = "")+
theme(
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),                 # 去除主要网格线
panel.grid.minor = element_blank(),                 # 去除次要网格线
panel.background = element_blank(),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))+             # 添加公式和R方
annotate("text", x = min(data1$Width), y = 4.5,
label = paste(equation, "\nR² = ", round(r_squared, digits = 2)),
hjust = 0, vjust = 1, size = 10)
p1
ggsave("宽度.pdf", p1, width = 6.5, height = 5.5, unit = "in", dpi = 300)
